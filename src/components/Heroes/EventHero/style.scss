@use "sass:math";
@use "../../../lib/breakpoints" as b;
@use "../../../lib/color" as c;

@mixin flex-basis($value: auto) {
  flex-basis: $value;
  max-width: $value;
  width: $value;
}

$breakpoints: (
  xs: b.$xs,
  sm: b.$sm,
  md: b.$md,
  lg: b.$lg,
  xl: b.$xl,
  xxl: b.$xxl,
);

$col-gutter: 24px;

@mixin breakpoint($name) {
  @if not map-has-key($breakpoints, $name) {
    @warn "Warning: `#{$name}` is not a valid breakpoint name.";
  } @else {
    @media (min-width: map-get($breakpoints, $name)) {
      @content;
    }
  }
}

.event-hero {
  position: relative;
  padding: 120px 0 0;
  display: flex;
  flex-wrap: wrap;

  .hero-header {
    margin: 0 5vw;
    display: flex;
    flex-wrap: wrap;
    width: 100%;

    .hero-header_title,
    .hero-header_details,
    .hero-header_image {
      margin: 0;
      box-sizing: border-box;
      @include flex-basis(100%);
    }

    .hero-header_title {
      // background: blue;
    }

    .hero-header_details {
      // background: green;
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      line-height: 140%;
      padding-bottom: 60px;
      @include breakpoint(md) {
        @include flex-basis(math.div(6, 12) * 100%);
        padding-bottom: 0;
      }
      @include breakpoint(lg) {
        @include flex-basis(math.div(5, 12) * 100%);
      }
      @include breakpoint(xl) {
        @include flex-basis(math.div(4, 12) * 100%);
      }

      .event-type {
        font-weight: 600;
        text-transform: uppercase;
      }
    }

    .hero-header_image {
      background: pink;
      overflow: hidden;

      @include breakpoint(md) {
        @include flex-basis(math.div(6, 12) * 100%);
      }
      @include breakpoint(lg) {
        @include flex-basis(math.div(7, 12) * 100%);
      }
      @include breakpoint(xl) {
        @include flex-basis(math.div(8, 12) * 100%);
      }

      figure {
        height: 0;
        width: 100%;
        position: relative;
        background: #000;
        &.ratio-3x2 {
          padding-bottom: 66.6%;
        }
      }
    }
  }

  .sticky-header {
    position: relative;
    width: 100%;
    height: 60px;

    .header-inner {
      border-bottom: 2px solid #000;
      width: 100%;
      height: 60px;
      display: flex;
      position: relative;
      display: flex;
      justify-content: center;
      align-items: center;
      overflow: hidden;

      .content {
        transform: translate3d(0, 60px, 0);
        opacity: 0;
        transition: transform 250ms ease, opacity 250ms ease;

        display: flex;
        justify-content: space-between;

        .action {
          .small-button {
            .button-label {
              font-size: 16px;
              line-height: 24px;
              padding: 8px 16px;
              border-radius: 18px;
              background: #000;
              color: c.$yellow;
            }
          }
        }
      }

      &.is-sticky {
        position: fixed;
        top: 0;
        background: c.$yellow;
        z-index: 999;

        .content {
          transform: translate3d(0, 0, 0);
          opacity: 1;
        }
      }
    }
  }
}
